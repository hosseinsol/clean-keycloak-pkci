{
  "x-generator": "NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "HSF-Rest-API",
    "description": "ASP.NET 8 HSF-Rest-API",
    "version": "v1"
  },
  "paths": {
    "/api/TodoItems": {
      "get": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "GetTodoItemsWithPagination",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "ListId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedListOfTodoItemBriefDto"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "CreateTodoItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTodoItemCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/api/TodoItems/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "UpdateTodoItem",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTodoItemCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "DeleteTodoItem",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/TodoItems/UpdateDetail/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "UpdateTodoItemDetail",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTodoItemDetailCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/TodoLists": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "GetTodoLists",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TodosVm"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "CreateTodoList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTodoListCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/api/TodoLists/{id}": {
      "put": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "UpdateTodoList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTodoListCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "DeleteTodoList",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/WeatherForecasts": {
      "get": {
        "tags": [
          "WeatherForecasts"
        ],
        "operationId": "GetWeatherForecasts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeatherForecast"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PaginatedListOfTodoItemBriefDto": {
      "type": "object",
      "required": [
        "items",
        "pageNumber",
        "totalPages",
        "totalCount",
        "hasPreviousPage",
        "hasNextPage"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TodoItemBriefDto"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "hasPreviousPage": {
          "type": "boolean"
        },
        "hasNextPage": {
          "type": "boolean"
        }
      }
    },
    "TodoItemBriefDto": {
      "type": "object",
      "required": [
        "id",
        "listId",
        "done"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "listId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "CreateTodoItemCommand": {
      "type": "object",
      "required": [
        "listId"
      ],
      "properties": {
        "listId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "UpdateTodoItemCommand": {
      "type": "object",
      "required": [
        "id",
        "done"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "UpdateTodoItemDetailCommand": {
      "type": "object",
      "required": [
        "id",
        "listId",
        "priority"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "listId": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "$ref": "#/definitions/PriorityLevel"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "PriorityLevel": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "None",
        "Low",
        "Medium",
        "High"
      ],
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "TodosVm": {
      "type": "object",
      "required": [
        "priorityLevels",
        "lists"
      ],
      "properties": {
        "priorityLevels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LookupDto"
          }
        },
        "lists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TodoListDto"
          }
        }
      }
    },
    "LookupDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TodoListDto": {
      "type": "object",
      "required": [
        "id",
        "items"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "colour": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TodoItemDto"
          }
        }
      }
    },
    "TodoItemDto": {
      "type": "object",
      "required": [
        "id",
        "listId",
        "done",
        "priority"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "listId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "done": {
          "type": "boolean"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "CreateTodoListCommand": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      }
    },
    "UpdateTodoListCommand": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "WeatherForecast": {
      "type": "object",
      "required": [
        "date",
        "temperatureC",
        "temperatureF"
      ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "temperatureC": {
          "type": "integer",
          "format": "int32"
        },
        "temperatureF": {
          "type": "integer",
          "format": "int32"
        },
        "summary": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT token": {
      "type": "apiKey",
      "description": "Copy 'Bearer ' + valid JWT token into field",
      "name": "Authorization",
      "in": "header"
    }
  }
}